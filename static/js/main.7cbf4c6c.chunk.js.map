{"version":3,"sources":["components/Search.jsx","components/Player.jsx","utils/index.js","components/SongList.jsx","request/index.js","request/api.js","components/Lyrics.jsx","pages/Home.jsx","index.js"],"names":["Search","state","isOpenInput","keywords","search","input","refs","offsetWidth","setState","focus","props","onSearch","defaultKeyword","this","className","type","placeholder","value","ref","onChange","e","currentTarget","onKeyDown","keyCode","onClick","PureComponent","columns","title","dataIndex","width","render","text","record","isPlay","color","Player","handleSongTitleAnimation","titleBox","titleText","titleBoxWidth","titleTextWidth","style","document","styleSheets","rules","map","item","index","deleteRule","insertRule","animation","toFixed","ChangeVolume","volume","audio","switchVolume","changePlayType","lplayType","playType","openPlayList","isOpenPlayList","changePlay","play","max","time","currentTime","playInfo","paused","timer","setInterval","progress","clearInterval","newCurTime","split","pause","changeProgress","min","snd","tipFormatter","handleAudioEnded","songDetail","playList","key","_this","length","changeSong","random","Math","toString","currentIndex","lastSong","showLyrics","addEventListener","target","id","nextProps","Object","keys","setTimeout","initPlay","querySelectorAll","scrollTop","src","albumPicUrl","display","alt","singer","join","fontSize","dataSource","showHeader","pagination","scroll","y","onRow","autoPlay","url","onEnded","dateFormat","date","format","handleFormat","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","week","getDay","weekChar","flag","slice","cur","includes","replaceAll","timeFormat","mode","starter","SongList","onScroll","el","callback","scrollHeight","clientHeight","onBottom","querySelector","onDblclick","scrollY","list","offsetHeight","songListBox","songList","loading","onDoubleClick","instance","axios","create","baseURL","timeout","interceptors","request","use","config","err","Promise","reject","response","result","status","data","page","get","getSongUrl","Lyrics","firstScreenScroll","isShowComment","nativeEvent","deltaY","showLyricsBox","isSHowLyricsBox","lyric","commentList","currentHeight","JSON","stringify","currentSongDetail","then","res","code","lyricInfo","lrc","filter","Boolean","push","substring","getComment","hotComments","comments","setProgress","console","log","setCurrentIndex","circumference","PI","step","timeDisplay","localTimer","beginTime","Date","onWheel","height","viewBox","cx","cy","r","strokeWidth","stroke","fill","strokeDasharray","transform","user","avatarUrl","nickname","content","likedCount","Home","album","hasMore","handleOnLoad","parse","newSongList","songs","artists","art","name","duration","picUrl","dblToPlay","getPlayInfo","lyrics","handlePlay","player","realkeyword","ReactDom"],"mappings":"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","file":"static/js/main.7cbf4c6c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport '../assets/scss/search.scss'\n\nexport default class Search extends PureComponent {\n  state = {\n    isOpenInput: false,\n    keywords: ''\n  }\n\n  search = () => {\n    const input = this.refs.input\n    if (input.offsetWidth === 0) {\n      this.setState({ isOpenInput: true });\n      return input.focus();\n    }\n    this.props.onSearch(this.state.keywords || this.props.defaultKeyword);\n  }\n\n  render() {\n    const { isOpenInput, keywords } = this.state;\n    const { defaultKeyword } = this.props;\n    return (\n      <div className=\"search_box\">\n        <div className=\"search_border\">\n          <input type=\"text\" placeholder={defaultKeyword} value={keywords} ref=\"input\" className={isOpenInput ? 'show_input' : ''} onChange={(e) => this.setState({ keywords: e.currentTarget.value })} onKeyDown={(e) => e.keyCode === 13 && this.search()} />\n          <i className=\"iconfont icon-sousuo\" onClick={this.search}></i>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { Slider, Tooltip, Table } from 'antd';\nimport '../assets/scss/player.scss'\n\nconst columns = [{\n  title: '音乐标题',\n  dataIndex: 'title',\n  width: 150,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}, {\n  title: '歌手',\n  dataIndex: 'singer',\n  width: 100,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}, {\n  title: '时长',\n  dataIndex: 'time',\n  width: 50,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}]\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      volume: 50, // 音量\n      playType: 0, // 播放方式：0顺序播放 1随机播放 2单曲循环 3列表循环\n      isOpenPlayList: false, // 是否打开播放列表\n      isPlay: false, // 是否为播放状态\n      currentTime: '00:00',\n      timer: null,\n      progress: 0,\n      max: 100, // 进度条最大值\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', e => {\n      e.target.id !== 'playlist' && this.setState({ isOpenPlayList: false });\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (Object.keys(nextProps.songDetail).length && nextProps.currentIndex !== this.props.currentIndex) {\n      const max = +nextProps.songDetail.time.split(':')[0] * 60 + +nextProps.songDetail.time.split(':')[1];\n      this.setState({ max });\n      const timer = setTimeout(() => {\n        clearInterval(timer);\n        this.handleSongTitleAnimation();\n        this.initPlay();\n      }, 0);\n    }\n  }\n\n  componentDidUpdate() {\n    const index = this.props.currentIndex;\n    index > 10 && (document.querySelectorAll('.ant-table-body')[1].scrollTop = index * 54);\n  }\n  \n\n  // 初始化播放\n  initPlay() {\n    this.setState({ isPlay: true, progress: 0, currentTime: '00:00' }, () => {\n      this.refs.audio.currentTime = 0;\n      clearInterval(this.state.timer);\n      this.play();\n    });\n  }\n\n  // 歌曲标题滚动\n  handleSongTitleAnimation = () => {\n    const { titleBox, titleText } = this.refs;\n    const titleBoxWidth = titleBox.offsetWidth;\n    const titleTextWidth = titleText.offsetWidth;\n    if (titleTextWidth > titleBoxWidth) {\n      const style = document.styleSheets[1];\n      [...style.rules].map((item, index) => {\n        return item.type === 7 && style.deleteRule(index);\n      });\n      style.insertRule(`@keyframes title_move {0% {left: 0;} 100% {left: -${titleTextWidth}px}}`);\n      titleText.style.animation = `title_move ${(+((titleTextWidth / titleBoxWidth).toFixed()) * 3)}s linear infinite`;\n    } else {\n      titleText.style = null;\n    }\n  }\n\n  // 调节音量\n  ChangeVolume = volume => {\n    this.setState({ volume }, () => {\n      this.refs.audio.volume = volume / 100;\n    });\n  }\n\n  // 音量切换（静音/非静音）\n  switchVolume = () => {\n    const volume = this.state.volume ? 0 : 50;\n    this.setState({ volume }, () => {\n      this.refs.audio.volume = volume / 100;\n    });\n  }\n\n  // 修改播放方式\n  changePlayType = () => {\n    const { playType: lplayType } = this.state;\n    const playType = lplayType === 3 ? 0 : lplayType + 1;\n    this.setState({ playType });\n  }\n\n  // 打开播放列表\n  openPlayList = () => {\n    const { isOpenPlayList } = this.state;\n    this.setState({ isOpenPlayList: !isOpenPlayList });\n  }\n\n  // 切换播放/暂停状态\n  changePlay = () => {\n    const { isPlay } = this.state;\n    this.setState({ isPlay: !isPlay }, () => {\n      this.play();\n    });\n  }\n\n  // 播放/暂停\n  play = () => {\n    const { isPlay, max, currentTime: time } = this.state;\n    const audio = this.refs.audio;\n    this.props.playInfo({\n      currentTime: time,\n      isPlay\n    });\n    if (isPlay) {\n      let currentTime = audio.currentTime;\n      currentTime = `${~~(currentTime / 60) < 10 ? '0' + ~~(currentTime / 60) : ~~(currentTime / 60)}:${(currentTime % 60).toFixed() < 10 ? '0' + (currentTime % 60).toFixed() : (currentTime % 60).toFixed()}`\n      this.setState({ currentTime }, () => {\n        audio.paused && audio.play();\n        const timer = setInterval(() => {\n          const { currentTime } = this.state;\n          const progress = this.state.progress + 1;\n          progress >= max && clearInterval(timer);\n          let newCurTime = +currentTime.split(':')[0] * 60 + +currentTime.split(':')[1] + 1;\n          newCurTime = `${~~(newCurTime / 60) < 10 ? '0' + ~~(newCurTime / 60) : ~~(newCurTime / 60)}:${newCurTime % 60 < 10 ? '0' + newCurTime % 60 : newCurTime % 60}`\n          this.props.playInfo({\n            currentTime: newCurTime,\n            isPlay\n          });\n          this.setState({ progress, currentTime: newCurTime });\n        }, 1000);\n        this.setState({ timer });\n      });\n    } else {\n      const { timer } = this.state;\n      audio.paused || audio.pause();\n      clearInterval(timer);\n    }\n  }\n\n  // 修改进度\n  changeProgress = progress => {\n    const min = ~~(progress / 60);\n    const snd = progress % 60;\n    const currentTime = `${min < 10 ? '0' + min : min}:${snd < 10 ? '0' + snd : snd}`;\n    this.refs.audio.currentTime = progress;\n    this.setState({ progress, currentTime }, () => {\n      clearInterval(this.state.timer);\n      this.play();\n    });\n  }\n\n  // 进度条提示格式\n  tipFormatter = () => {\n    return this.state.currentTime;\n  }\n\n  // 播放结束\n  handleAudioEnded = () => {\n    const { playType } = this.state;\n    const { songDetail, playList } = this.props;\n    const index = +songDetail.key - 1;\n    const _this = this;\n    return {\n      '0': inTurn,\n      '1': random,\n      '2': cycle,\n      '3': list,\n    }[playType.toString()]();\n\n    // 0顺序播放\n    function inTurn() {\n      return index === playList.length - 1\n        ? (\n          _this.refs.audio.pause(),\n          _this.changePlay()\n        )\n        : _this.props.changeSong(playList[index + 1], index + 1, index);\n    }\n\n    // 1随机播放\n    function random() {\n      const random = ~~(Math.random() * playList.length);\n      _this.props.changeSong(playList[random], random, index);\n    }\n\n    // 2单曲循环\n    function cycle() {\n      _this.props.changeSong(playList[index], index, index);\n    }\n\n    // 3列表循环\n    function list() {\n      index === playList.length - 1\n        ? _this.props.changeSong(playList[0], 0, index)\n        : _this.props.changeSong(playList[index + 1], index + 1, index);\n    }\n  }\n\n  // 切歌\n  changeSong = (record, index) => {\n    const { currentIndex } = this.props;\n    this.props.changeSong(record, index, currentIndex);\n  }\n\n  // 上一曲\n  lastSong = () => {\n    const { playType } = this.state;\n    const { songDetail, playList } = this.props;\n    const index = +songDetail.key - 1;\n    const _this = this;\n    return {\n      '0': inTurn,\n      '1': random,\n      '2': cycle,\n      '3': list,\n    }[playType.toString()]();\n\n    // 0顺序播放\n    function inTurn() {\n      return index\n        ? _this.props.changeSong(playList[index - 1], index - 1, index)\n        : '';\n    }\n\n    // 1随机播放\n    function random() {\n      const random = ~~(Math.random() * playList.length);\n      _this.props.changeSong(playList[random], random, index);\n    }\n\n    // 2单曲循环\n    function cycle() {\n      _this.props.changeSong(playList[index], index, index);\n    }\n\n    // 3列表循环\n    function list() {\n      index\n        ? _this.props.changeSong(playList[index - 1], index - 1, index)\n        : _this.props.changeSong(playList[playList.length - 1], playList.length - 1, index);\n    }\n  }\n\n  // 打开歌词面板\n  showLyrics = () => {\n    this.props.showLyrics();\n  }\n\n  render() {\n    const { songDetail, playList } = this.props;\n    const { volume, playType, isOpenPlayList, isPlay, progress, currentTime, max } = this.state;\n    return (\n      <div className=\"player_box\">\n        <div className=\"album_picture\">\n          <img src={songDetail.albumPicUrl} style={{ display: songDetail.albumPicUrl ? 'block' : 'none' }} alt=\"\" />\n          <div className=\"director\" onClick={this.showLyrics}>\n            <i className=\"iconfont icon-up\"></i>\n          </div>\n        </div>\n        <div className=\"song_info\">\n          <div className=\"title\" ref=\"titleBox\">\n            <span ref=\"titleText\">{songDetail.title}</span>\n          </div>\n          <div className=\"artist\">{songDetail.singer}</div>\n        </div>\n\n        <div className=\"control\">\n          <div className=\"button_group\">\n            <div className=\"control_btn\" onClick={this.lastSong}>\n              <i className=\"iconfont icon-shangyiqu\"></i>\n            </div>\n            <div className=\"control_btn play_btn\" onClick={this.changePlay}>\n              <i className={['iconfont', isPlay ? 'icon-pause' : 'icon-bofang'].join(' ')}></i>\n            </div>\n            <div className=\"control_btn\" onClick={this.handleAudioEnded}>\n              <i style={{ fontSize: '23px' }} className=\"iconfont icon-xiayiqu\"></i>\n            </div>\n          </div>\n          <div className=\"progress_bar\">\n            <div className=\"begin_time\">{currentTime}</div>\n            <Slider value={progress} max={max} onChange={this.changeProgress} tipFormatter={this.tipFormatter} />\n            <div className=\"end_time\">{songDetail.time || '00:00'}</div>\n          </div>\n        </div>\n\n        <div className=\"right\">\n          <div className=\"volume\">\n            <div className=\"icon\" onClick={this.switchVolume}>\n              <i className={['iconfont', volume ? 'icon-shengyin' : 'icon-jingyin'].join(' ')}></i>\n            </div>\n            <Slider value={volume} onChange={this.ChangeVolume} />\n          </div>\n          <Tooltip title={['顺序播放', '随机播放', '单曲循环', '列表循环'][playType]}>\n            <div className=\"play_type\" onClick={this.changePlayType}>\n              <i className={['iconfont', `icon-playtype${playType}`].join(' ')}></i>\n            </div>\n          </Tooltip>\n          <div className=\"playlist_btn\" onClick={this.openPlayList}>\n            <i id=\"playlist\" className=\"iconfont icon-list\"></i>\n          </div>\n          <div className={['playlist', isOpenPlayList ? 'show_playlist' : ''].join(' ')}>\n            <Table columns={columns} dataSource={playList} showHeader={false} pagination={false} scroll={{ y: 600 }} onRow={(record, index) => ({ onClick: () => { this.changeSong(record, index) } })} />\n          </div>\n        </div>\n        <audio ref=\"audio\" autoPlay src={songDetail.url} onEnded={this.handleAudioEnded}></audio>\n      </div>\n    )\n  }\n}\n","/**\n * 触底事件\n * @param {HTMLElement} el 触发触底事件的目标元素\n * @param {Function} callback 触发触底事件后执行的回调函数\n */\nexport const onBottom = (el, callback) => {\n  const scrollTop = el.scrollTop;\n  const scrollHeight = el.scrollHeight;\n  const offsetHeight = el.clientHeight;\n  const currentHeight = scrollTop + offsetHeight;\n  currentHeight >= scrollHeight && callback();\n}\n\n/**\n * 日期格式化\n * @param {Date} date 日期对象\n * @param {string} format 格式\n * 'YYYY-MM-dd hh:mm:ss ww' => '2021-01-01 14:20:45 星期五'\n * 'YYYY-MM-dd HH:mm:ss ww' => '2021-01-01 下午14:20:45 星期五'\n * 'yy-MM-dd hh:mm:ss ww' => '21-01-01 14:20:45 星期五'\n * @returns {string}\n */\nexport const dateFormat = function (date, format = 'YYYY-MM-dd hh:mm:ss ww') {\n  const handleFormat = time => time < 10 ? `0${time}` : `${time}`;\n  const year = date.getFullYear().toString();\n  const month = handleFormat(date.getMonth() + 1);\n  const day = handleFormat(date.getDate());\n  const hour = handleFormat(date.getHours());\n  const minute = handleFormat(date.getMinutes());\n  const second = handleFormat(date.getSeconds());\n  const week = date.getDay();\n  const weekChar = ['日', '一', '二', '三', '四', '五', '六'];\n  const flag = [['yy', year.slice(2)], ['YYYY', year], ['MM', month], ['dd', day], ['hh', hour], ['HH', +hour > 12 ? `下午${+hour - 12}` : `上午${hour}`], ['mm', minute], ['ss', second], ['ww', `星期${weekChar[week]}`]];\n  flag.map(cur => format.includes(cur[0]) && (format = format.replaceAll(cur[0], cur[1])));\n  return format;\n}\n\n// 时间格式转换\nexport const timeFormat = function (time, mode) {\n  const starter = {\n    0: () => {\n      // '04:45' => 285\n      return +time.split(':')[0] * 60 + +time.split(':')[1];\n    },\n    1: () => {\n      // 285 => '04:45'\n      return `${~~(time / 60) < 10 ? '0' + ~~(time / 60) : ~~(time / 60)}:${time % 60 < 10 ? '0' + time % 60 : time % 60}`;\n    }\n  }[mode];\n  return starter();\n}","import React, { PureComponent } from 'react'\nimport '../assets/scss/songlist.scss'\nimport { Table } from 'antd'\nimport { onBottom } from '../utils'\n\nconst columns = [{\n  title: '',\n  dataIndex: 'key',\n  width: 70,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}, {\n  title: '音乐标题',\n  dataIndex: 'title',\n  width: 352,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}, {\n  title: '歌手',\n  dataIndex: 'singer',\n  width: 250,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}, {\n  title: '专辑',\n  dataIndex: 'album',\n  width: 250,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}, {\n  title: '时长',\n  dataIndex: 'time',\n  width: 70,\n  render: (text, record) => record.isPlay ? <font color=\"red\">{text}</font> : text\n}]\n\nexport default class SongList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrollY: 'max-content',\n    }\n  }\n\n  componentDidMount() {\n    const scrollY = +this.refs.list.offsetHeight - 56;\n    this.setState({ scrollY });\n  }\n\n  componentDidUpdate() {\n    const index = this.props.currentIndex;\n    const songListBox = document.querySelector('.ant-table-body');\n    songListBox.addEventListener('scroll', this.onScroll);\n    index > 13 && (songListBox.scrollTop = index * 54);\n  }  \n\n  onScroll = () => {\n    onBottom(document.querySelector('.ant-table-body'), this.props.onBottom);\n  }\n\n  onDblclick = (record, index) => {\n    const { currentIndex } = this.props;\n    this.props.onDblclick(record, index, currentIndex);\n  }\n\n  render() {\n    const { songList, loading } = this.props;\n    const { scrollY: y } = this.state;\n    return (\n      <div className=\"list\" ref=\"list\">\n        <Table columns={columns} dataSource={songList} pagination={false} scroll={{ y }} loading={loading} onRow={(record, index) => ({ onDoubleClick: () => { this.onDblclick(record, index) } })} />\n      </div>\n    )\n  }\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n  // baseURL: 'http://localhost:5000',\n  baseURL: 'http://music.eleuu.com',\n  timeout: 5000\n});\n\ninstance.interceptors.request.use(config => {\n  return config;\n}, err => {\n  return Promise.reject(err);\n});\n\ninstance.interceptors.response.use(result => {\n  return result.status === 200 ? result.data : result;\n}, err => {\n  return Promise.reject(err);\n});\n\nexport default instance;","import request from './index'\n// import qs from 'qs'\n\n// 推荐音乐\nexport const getRecommendationSong = () => request.get('/top/song?type=0');\n\n// 默认搜索关键词\nexport const getDefaultKeyword = () => request.get('/search/default');\n\n// 搜索建议\nexport const getSearchSuggest = keywords => request.get(`/search/suggest?keywords=${keywords}`);\n\n// 搜索\nexport const search = (keywords, page) => request.get(`/search?keywords=${keywords}&offset=${page}`);\n\n// 获取歌词\nexport const getLyric = id => request.get(`/lyric?id=${id}`);\n\n// 获取歌曲详情\nexport const getSongDetail = id => request.get(`/song/detail?ids=${id}`);\n\n// 获取音乐 url\nexport const getSongUrl = id => request.get(`/song/url?id=${id}`);\n\n// 获取歌曲评论\nexport const getComment = id => request.get(`/comment/music?id=${id}`);","import React, { PureComponent } from 'react'\nimport '../assets/scss/lyrics.scss'\nimport { getLyric, getComment } from '../request/api'\nimport { dateFormat, timeFormat } from '../utils'\n\nexport default class Lyrics extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowComment: false,\n      isSHowLyricsBox: false,\n      lyric: [],\n      time: [],\n      currentIndex: -1,\n      commentList: [],\n      progress: '0 999',\n      currentHeight: 0,\n      timer: 0,\n      isPlay: false\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    JSON.stringify(nextProps.playInfo) !== JSON.stringify(this.props.playInfo) && this.setState({\n      currentIndex: -1,\n      currentHeight: 0,\n    });\n\n    nextProps.currentSongDetail?.id && nextProps.currentSongDetail?.id !== this.props.currentSongDetail?.id && getLyric(nextProps.currentSongDetail.id).then(res => {\n      if (res.code === 200) {\n        const lyricInfo = res.lrc.lyric;\n        const time = [];\n        const lyric = lyricInfo.split('\\n').filter(Boolean).map(item => {\n          time.push(item.split(']')[0].substring(1));\n          return item.split(']')[1];\n        });\n        this.setState({ time, lyric });\n      }\n    });\n\n    nextProps.currentSongDetail?.id && nextProps.currentSongDetail?.id !== this.props.currentSongDetail?.id && getComment(nextProps.currentSongDetail.id).then(res => {\n      if (res.code === 200) {\n        this.setState({ commentList: res.hotComments.length ? res.hotComments : res.comments });\n      }\n    });\n\n    this.props.playInfo?.currentTime && this.setProgress();\n    console.log('nextProps.playInfo?.isPlay', nextProps.playInfo?.isPlay);\n    nextProps.playInfo?.isPlay === false && this.setState({isPlay: false}, () => {\n      this.setCurrentIndex();\n    });\n  }\n\n  firstScreenScroll = e => {\n    const { isShowComment } = this.state;\n    e.nativeEvent.deltaY > 0 && !isShowComment && this.setState({ isShowComment: true });\n    !document.querySelector('.comment').scrollTop && isShowComment && e.nativeEvent.deltaY < 0 && this.setState({ isShowComment: false });\n  }\n\n  showLyricsBox = () => {\n    const { isSHowLyricsBox } = this.state;\n    this.setState({ isSHowLyricsBox: !isSHowLyricsBox });\n  }\n\n  // 播放/暂停\n  play = () => {\n    this.props.play();\n  }\n\n  // 进度\n  setProgress() {\n    const circumference = 2 * Math.PI * 160;\n    const { time } = this.props.currentSongDetail;\n    const { currentTime, isPlay } = this.props.playInfo;\n    const step = circumference / timeFormat(time, 0);\n    const timeDisplay = ~~timeFormat(currentTime, 0);\n    this.setState({ progress: `${timeDisplay * step} ${circumference}` });\n    if(this.state.isPlay !== isPlay) {\n      this.setCurrentIndex();\n      this.setState({isPlay});\n    }\n  }\n\n  // 设置当前歌词index\n  setCurrentIndex() {\n    const { isPlay } = this.props.playInfo;\n    console.log('setCurrentIndex isPlay', isPlay);\n    const { timer: localTimer, time } = this.state;\n    const beginTime = +new Date();\n    if (isPlay) {\n      const timer = setInterval(() => {\n        const { currentIndex } = this.state;\n        let { currentHeight } = this.state;\n        time.map((item, index) => {\n          return +new Date() - beginTime >= this.timeFormat(item) && index === currentIndex + 1 && this.setState({ currentIndex: index, currentHeight: currentHeight + document.querySelector('.active')?.offsetHeight || 0 });\n        });\n        currentIndex === time.length - 1 && clearInterval(timer);\n      }, 0);\n      return this.setState({timer});\n    }\n    clearInterval(localTimer);\n  }\n\n  timeFormat = time => {\n    const m = +time.split(':')[0];\n    const s = +time.split(':')[1].split('.')[0];\n    const mm = +time.split(':')[1].split('.')[1];\n    return m * 60 * 1000 + s * 1000 + mm;\n  }\n\n  render() {\n    const { isShowComment, lyric, commentList, isSHowLyricsBox, progress, currentIndex, currentHeight } = this.state;\n    const { playInfo, currentSongDetail } = this.props;\n    return (\n      <div className={['lyrics_box', isSHowLyricsBox ? 'show_lyrics_box' : ''].join(' ')}>\n        <div className=\"bg_box\"></div>\n        <div className=\"container\">\n          <div className=\"first_screen\">\n            <div className=\"left\" onWheel={this.firstScreenScroll}>\n              <div className={['album_container', isShowComment ? 'show_comment' : ''].join(' ')}>\n                <div className={['album_box', playInfo.isPlay ? 'playing' : ''].join(' ')}>\n                  <img src={currentSongDetail.albumPicUrl} alt=\"\" />\n                  <div className=\"mask\">\n                    <div className=\"time\">\n                      <div className=\"currentTime\">{playInfo.currentTime}</div>\n                      <div className=\"duration\">{currentSongDetail.time}</div>\n                    </div>\n                    <div className=\"circle\">\n                      <svg width=\"326\" height=\"326\" viewBox=\"0,0,326,326\">\n                        <circle\n                          cx=\"163\"\n                          cy=\"163\"\n                          r=\"159\"\n                          strokeWidth=\"4\"\n                          stroke=\"rgba(255, 206, 113, 0.2)\"\n                          fill=\"rgba(0,0,0,.2)\"\n                        ></circle>\n                        <circle\n                          cx=\"163\"\n                          cy=\"163\"\n                          r=\"159\"\n                          strokeWidth=\"3\"\n                          stroke=\"rgba(255, 206, 113, 1)\"\n                          fill=\"none\"\n                          strokeDasharray={progress}\n                          transform=\"matrix(0,-1,1,0,0,326)\"\n                        ></circle>\n                      </svg>\n                    </div>\n                    <div className=\"play_btn\" onClick={this.play}>\n                      <i className={['iconfont', playInfo.isPlay ? 'icon-pause' : 'icon-bofang'].join(' ')}></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"comment\">\n                <div className=\"list\">\n                  {\n                    commentList.map((item, index) => {\n                      return (\n                        <div className=\"item\" key={index}>\n                          <div className=\"item_left\">\n                            <img src={item.user.avatarUrl} alt=\"\" />\n                          </div>\n                          <div className=\"item_right\">\n                            <div className=\"content\">\n                              <span className=\"nickname\">{item.user.nickname}: </span>\n                              <span>{item.content}</span>\n                            </div>\n                            <div className=\"bottom\">\n                              <div className=\"time\">{dateFormat(new Date(item.time), 'YYYY年MM月dd日 hh:mm')}</div>\n                              <div className=\"like\">\n                                <div className=\"icon\">\n                                  <i className=\"iconfont icon-zan\"></i>\n                                </div>\n                                <div className=\"likecount\">{item.likedCount}</div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"right\">\n              <div className=\"lyrics_content\">\n                <ul style={{ transform: currentHeight >= 350 ? `translateY(-${currentHeight - 350}px)` : '' }}>\n                  {\n                    lyric.map((item, index) => {\n                      return <li key={index} className={currentIndex === index ? 'active' : ''}>{item}</li>\n                    })\n                  }\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport Search from '../components/Search'\nimport Player from '../components/Player'\nimport SongList from '../components/SongList'\nimport Lyrics from '../components/Lyrics'\nimport { getRecommendationSong, getDefaultKeyword, search, getSongUrl } from '../request/api'\n\nexport default class Home extends PureComponent {\n  state = {\n    songList: [{\n      key: '',\n      title: '',\n      singer: '',\n      album: '',\n      time: '',\n      albumPicUrl: '',\n      isPlay: false\n    }],\n    loading: true,\n    defaultKeyword: '',\n    keywords: '',\n    hasMore: false,\n    page: 1,\n    currentSongDetail: {},\n    currentIndex: -1,\n    playList: [],\n    playInfo: {}\n  }\n\n  componentDidMount() {\n    // 获取默认搜索关键词\n    getDefaultKeyword().then(res => {\n      res.code === 200 && this.setState({ defaultKeyword: res.data.realkeyword });\n    });\n\n    // 获取推荐歌曲列表\n    getRecommendationSong().then(res => {\n      if (res.code === 200) {\n        const songList = res.data.map((item, index) => {\n          const singer = item.artists.map(art => art.name).join('、');\n          const second = ~~(item.duration / 1000);\n          const time = `${~~(second / 60) < 10 ? '0' + ~~(second / 60) : ~~(second / 60)}:${second % 60 < 10 ? '0' + second % 60 : second % 60}`;\n          return {\n            id: item.id,\n            key: index + 1 < 10 ? `0${index + 1}` : (index + 1).toString(),\n            title: item.name,\n            singer,\n            album: item.album.name,\n            time,\n            albumPicUrl: item.album.picUrl,\n            isPlay: false\n          }\n        });\n        this.setState({ songList, loading: false });\n      }\n    });\n  }\n\n  // 搜索\n  search = keywords => {\n    this.setState({\n      hasMore: true,\n      page: 1,\n      keywords,\n      songList: []\n    }, () => {\n      this.handleOnLoad();\n    });\n  }\n\n  // 触底加载\n  handleOnLoad = () => {\n    const {loading, hasMore} = this.state;\n    if (loading || !hasMore)  return;\n    this.setState({ loading: true });\n    const { keywords, page } = this.state;\n    search(keywords, page).then(res => {\n      if (res.code === 200) {\n        const songList = JSON.parse(JSON.stringify(this.state.songList));\n        const key = songList.length + 1;\n        const newSongList = res.result.songs.map((item, index) => {\n          const singer = item.artists.map(art => art.name).join('、');\n          const second = ~~(item.duration / 1000);\n          const time = `${~~(second / 60) < 10 ? '0' + ~~(second / 60) : ~~(second / 60)}:${second % 60 < 10 ? '0' + second % 60 : second % 60}`;\n          return {\n            id: item.id,\n            key: key + index < 10 ? `0${key + index}` : (key + index).toString(),\n            title: item.name,\n            singer,\n            album: item.album.name,\n            time,\n            albumPicUrl: item.album.picUrl,\n            isPlay: false\n          }\n        });\n        songList.push(...newSongList);\n        this.setState({ songList, loading: false, page: page + 1, hasMore: res.result.hasMore });\n      }\n    });\n  }\n\n  // 双击播放\n  dblToPlay = (item, index, currentIndex) => {\n    getSongUrl(item.id).then(res => {\n      if(res.code === 200) {\n        const currentSongDetail = {\n          ...item,\n          url: res.data[0].url\n        };\n        const playList = JSON.parse(JSON.stringify(this.state.songList));\n        playList[currentIndex] && (playList[currentIndex].isPlay = false);\n        playList[index].isPlay = true;\n        this.setState({ currentSongDetail, playList, songList: playList, currentIndex: index });\n      }\n    });\n  }\n\n  // 获取播放信息\n  getPlayInfo = (playInfo) => {\n    this.setState({ playInfo })\n  }\n\n  // 打开歌词面板\n  showLyrics = () => {\n    this.refs.lyrics.showLyricsBox();\n  }\n\n  // 播放/暂停\n  handlePlay = () => {\n    this.refs.player.changePlay();\n  }\n\n  render() {\n    const { songList, loading, defaultKeyword, currentSongDetail, playList, currentIndex, playInfo } = this.state;\n    return (\n      <>\n        <Search defaultKeyword={defaultKeyword} onSearch={this.search} />\n        <div className=\"main\">\n          <SongList songList={songList} loading={loading} currentIndex={currentIndex} onBottom={this.handleOnLoad} onDblclick={this.dblToPlay} />\n        </div>\n        <Player ref=\"player\" songDetail={currentSongDetail} playList={playList} currentIndex={currentIndex} changeSong={this.dblToPlay} playInfo={this.getPlayInfo} showLyrics={this.showLyrics} />\n        <Lyrics ref=\"lyrics\" playInfo={playInfo} currentSongDetail={currentSongDetail} play={this.handlePlay} />\n      </>\n    )\n  }\n}\n","import ReactDom from 'react-dom'\nimport Home from './pages/Home'\nimport 'reset-css/reset.css'\nimport 'antd/dist/antd.css';\nimport './assets/scss/index.scss'\n\nReactDom.render(\n  <Home />,\n  document.querySelector('#root')\n);"],"sourceRoot":""}